/**
* Test script for {{properCase name}}
* {{> proprietary }}
*/

import React from 'react';
import { render, waitForElement } from 'react-testing-library';
import { Provider } from 'react-redux';

import {{ properCase name }} from '../Loadable';
import reducer from '../reducer';
import {StoreContext} from "redux-react-hook";
import {store} from "../../../index";
import {useInjectReducer} from "../../../utils/reducerInjectors";

describe('<{{ properCase name }} />', () => {
    useInjectReducer('{{ camelCase name }}Reducer', reducer);
        const TestComponent = (
        <StoreContext.Provider value={store}>
            <Provider store={store}>
                <{{ properCase name }} debug />
            </Provider>
        </StoreContext.Provider>
    );

    it('Expect to have unit tests specified', async() => {
        const component = await waitForElement(() => new Promise(resolve => {
            let { container } = render(TestComponent);
            resolve(container);
        }));
        expect(component).toMatchSnapshot();
    });
});

export {};
